name: Deploy DMT+Vault to SKALE via Relayer

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag or note"
        required: false
        default: "manual"

jobs:
  relay-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Generate HMAC and trigger relayer
        id: call
        env:
          RELAYER_URL: ${{ secrets.RELAYER_URL }}
          RELAYER_HMAC_SECRET: ${{ secrets.RELAYER_HMAC_SECRET }}
          TAG: ${{ github.event.inputs.tag }}
        run: |
          BODY=$(jq -n --arg tag "$TAG" '{tag: $tag}')
          SIG=$(python3 - <<'PY'
import sys, hmac, hashlib, os
body=os.environ['BODY'].encode()
secret=os.environ['RELAYER_HMAC_SECRET'].encode()
print(hmac.new(secret, body, hashlib.sha256).hexdigest())
PY
)
          curl -sS -X POST "$RELAYER_URL/deploy" \
            -H "Content-Type: application/json" \
            -H "X-Signature: $SIG" \
            -d "$BODY" | tee response.json

      - name: Parse result
        run: |
          cat response.json
          SUCCESS=$(jq -r .success response.json)
          if [ "$SUCCESS" != "true" ]; then
            echo "Deployment failed" >&2
            exit 1
          fi

  relay-status:
    runs-on: ubuntu-latest
    needs: relay-deploy
    steps:
      - name: Check last deployment
        env:
          RELAYER_URL: ${{ secrets.RELAYER_URL }}
          RELAYER_HMAC_SECRET: ${{ secrets.RELAYER_HMAC_SECRET }}
        run: |
          BODY='{}'
          SIG=$(python3 - <<'PY'
import sys, hmac, hashlib, os
body=os.environ['BODY'].encode()
secret=os.environ['RELAYER_HMAC_SECRET'].encode()
print(hmac.new(secret, body, hashlib.sha256).hexdigest())
PY
)
          curl -sS "$RELAYER_URL/status" \
            -H "Content-Type: application/json" \
            -H "X-Signature: $SIG"
